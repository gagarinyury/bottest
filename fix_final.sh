#!/bin/bash

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫..."

# 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ñ–∞–π–ª—ã  –∏ 
if [ ! -f ~/professor_y_bot/bot.py ]; then
    echo "‚ùå –§–∞–π–ª bot.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º..."
    touch ~/professor_y_bot/bot.py
fi

if [ ! -f ~/professor_y_bot/handlers/lessons.py ]; then
    echo "‚ùå –§–∞–π–ª handlers/lessons.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º..."
    touch ~/professor_y_bot/handlers/lessons.py
fi

# 2Ô∏è‚É£ –ò–∑–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—á—Ç–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ)
chmod 644 ~/professor_y_bot/bot.py
chmod 644 ~/professor_y_bot/handlers/lessons.py

# 3Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º 
cat > ~/professor_y_bot/handlers/lessons.py <<LSPY
import sqlite3
import logging
from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import config

router = Router()

def get_lesson(user_id):
    conn = sqlite3.connect("database.db")
    cursor = conn.cursor()
    cursor.execute("SELECT current_lesson FROM users WHERE id = ?", (user_id,))
    row = cursor.fetchone()

    if row:
        lesson_id = row[0]
    else:
        cursor.execute("INSERT INTO users (id, current_lesson) VALUES (?, 1)", (user_id,))
        conn.commit()
        lesson_id = 1

    cursor.execute("SELECT title, content, image FROM lessons WHERE id = ?", (lesson_id,))
    lesson = cursor.fetchone()
    
    conn.close()
    
    if lesson:
        return lesson_id, lesson[0], lesson[1], lesson[2]
    else:
        return None

@router.message(commands=["lesson"])
async def send_lesson(message: types.Message):
    user_id = message.from_user.id
    lesson = get_lesson(user_id)

    if lesson:
        lesson_id, title, content, image = lesson
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), KeyboardButton(text="‚û°Ô∏è –î–∞–ª–µ–µ")],
                [KeyboardButton(text="üìú –ú–µ–Ω—é")]
            ],
            resize_keyboard=True
        )

        response = f"üìñ *{title}*\n\n{content}"
        
        if image:
            await message.answer_photo(photo=image, caption=response, reply_markup=keyboard, parse_mode="Markdown")
        else:
            await message.answer(response, reply_markup=keyboard, parse_mode="Markdown")
    else:
        await message.answer("‚ùå –£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
LSPY

echo "‚úÖ  –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!"

# 4Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º 
cat > ~/professor_y_bot/bot.py <<BTPY
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import BotCommand
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web
import config
from handlers.lessons import router as lessons_router

logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.BOT_TOKEN)
dp = Dispatcher()

dp.include_router(lessons_router)

async def on_startup():
    await bot.set_webhook(url=config.WEBHOOK_URL)
    await bot.set_my_commands([BotCommand(command="lesson", description="–ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–∫")])
    logging.info(f"üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {config.WEBHOOK_URL}")

app = web.Application()
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=config.WEBHOOK_PATH)
setup_application(app, dp, bot=bot, on_startup=on_startup)

if __name__ == "__main__":
    web.run_app(app, host="0.0.0.0", port=config.WEBHOOK_PORT)
BTPY

echo "‚úÖ  –æ–±–Ω–æ–≤–ª—ë–Ω!"

# 5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
echo "üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã:"
ls -la ~/professor_y_bot/
ls -la ~/professor_y_bot/handlers/

# 6Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫
echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞..."
cd ~/professor_y_bot
python bot.py &> bot.log &

echo "‚úÖ –ë–æ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ!"
